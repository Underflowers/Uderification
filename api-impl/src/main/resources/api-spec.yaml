openapi: '3.0.3'
info:
  version: '0.1.0'
  title: Fruits API
  description: An API to demonstrate Swagger and Spring Boot
security:
  #  - bearerAuth: []
  - apiKeyAuth: []
paths:
  /applications:
    post:
      description: register a new application
      operationId: registerApplication
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RegisteringApplication'
      responses:
        '201':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Token'
    get:
      description: get the list of all applications
      operationId: getApplications
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'

  /badges:
    post:
      description: Create a new badge
      operationId: createBadge
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Badge'
      responses:
        '201':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Badge'
        '409':
          description: Conflict, badge already exists for the given application
    get:
      description: get the list of all badges
      operationId: getBadges
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Badge'

  /users/{user}/badges:
    get:
      description: get badges earned by a user
      operationId: getUserBadges
      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Badge'

  /users/{user}/scores:
    get:
      description: get badges earned by a user
      operationId: getUserScores
      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserScore'

  /pointScales:
    post:
      description: Create a new point scale
      operationId: createPointScale
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PointScale'
      responses:
        '201':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PointScale'
        '409':
          description: Conflict, point scale already exists for the given application
    get:
      description: get the list of all point scales
      operationId: getPointScales
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointScale'

  /pointScales/{pointScale}/leaderBoard:
    get:
      description: Get the leader board for the given point scale
      operationId: getLeaderBoard
      parameters:
        - in: path
          name: pointScale
          schema:
            type: string
          required: true
          description: Name of the point scale in the application
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of users to return in the leader board
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderBoardEntry'

  /rules:
    post:
      description: Create a new rule
      operationId: createRule
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '201':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Rule'
        '400':
          description: Bad request, must have a valid badgeName OR valid scaleName + point

  /events:
    post:
      description: Trigger a new event
      operationId: triggerEvent
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: OK
        '201':
          description: success
        '400':
          description: Bad request, must have a valid eventType

components:
  securitySchemes:
    #    bearerAuth:            # arbitrary name for the security scheme
    #      type: http
    #      scheme: bearer       # warning: it HAS TO be a lowercase b for the swagger ui version used in springfox
    #      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Fruit:
      type: object
      properties:
        kind:
          type: string
        colour:
          type: string
        size:
          type: string
        weight:
          type: string
        expirationDate:
          type: string
          format: date
          nullable: false
        expirationDateTime:
          type: string
          format: date-time
    RegisteringApplication:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        description:
          type: string
    Application:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        description:
          type: string
        token:
          type: string
    Token:
      type: object
      properties:
        token:
          type: string
    Badge:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        description:
          type: string
    PointScale:
      type: object
      properties:
        name:
          type: string
    UserScore:
      type: object
      properties:
        pointScaleName:
          type: string
        score:
          type: integer
    LeaderBoardEntry:
      type: object
      properties:
        appUserId:
          type: string
        score:
          type: integer
    Rule:
      type: object
      properties:
        eventType:
          type: string
        badgeName:
          type: string
        scaleName:
          type: string
        scalePoints:
          type: integer
    Event:
      type: object
      properties:
        eventType:
          type: string
        appUserId:
          type: string
